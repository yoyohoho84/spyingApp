{"version":3,"sources":["config.js","items/ResultUserItem.js","components/GeneralInfoUser.js","components/UserCard.js","panels/Home.js","App.js","index.js","helpers/api-manager.js","helpers/sharing.js","modal/index.js","modal/ModalBuy.js"],"names":["APP_ID","GROUP_ID","QIWI_PUBLIC_KEY","APP_AVATAR","APP_IMG_SHARING","APP_IMG_SHARING_WALL","USER_ID","Number","URLSearchParams","document","location","search","get","ResultUserItem","id","firstName","lastName","photoURL","urlUser","activeTab","amountLikes","className","style","paddingLeft","color","width","before","href","target","src","description","whiteSpace","display","justifyContent","alignItems","flexDirection","marginLeft","GeneralInfoUser","targetUserInfo","fullName","regDate","lastSeen","city","audiosCount","photosCount","videosCount","friendsCount","followersCount","UserCard","backgroundColor","callMethod","APIManager","Home","openPopoutSharing","go","fetchedUser","openModal","onChangeHandlerId","getUserInfo","snackbar","loadingSpinner","useState","idVk","dataResult","setActiveTab","userInfo","setUserInfo","useEffect","then","message","renderResult","map","item","index","key","padding","attempts","mode","size","stretched","onClick","margin","top","placeholder","onChange","type","borderRadius","level","data-to","marginTop","App","amount","targetId","getPlatform","activePanel","setActivePanel","setUser","popout","setPopout","activeModal","setActiveModal","setSnackbar","setTargetUserInfo","setLoadingSpinner","a","bridge","send","user","subscribe","detail","data","schemeAttribute","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","sendPromise","result","platform","console","log","catch","err","onChangeHandlerAmount","e","trim","openAlert","text","duration","layout","onClose","fill","height","getDonateLink","sum","status","link","createElement","dispatchEvent","window","MouseEvent","view","bubbles","cancelable","fireEvent","header","modal","currentTarget","dataset","to","autoclose","sharing","targetUser","generalInfo","ReactDOM","render","getElementById","methodName","params","fetch","baseURL","headers","JSON","stringify","method","response","json","shareLink","navigator","clipboard","writeText","error","copyLink","url","background_type","attachment","story","preventDefault","urlPhotoStories","textStories","attachments","share","ModalBuy","setSum","setLink","icon","caption","defaultChecked","name"],"mappings":"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","file":"static/js/main.f9b05dd5.chunk.js","sourcesContent":["export const APP_ID = 7559432;\r\nexport const GROUP_ID = 197704164;\r\nexport const QIWI_PUBLIC_KEY = \"48e7qUxn9T7RyYE1MVZswX1FRSbE6iyCj2gCRwwF3Dnh5XrasNTx3BGPiMsyXQFNKQhvukniQG8RTVhYm3iP6eNeguoXyC99Aq22J8SZPKNgc2WqKx64qaPHePwqThccSrj3HPYcWtCAAb4y8zT5JD6kUUSyJK1sVaG2XrP9hXNzXzo5zVD2iWC9o81QD\";\r\nexport const APP_AVATAR = \"https://sun9-66.userapi.com/w_MnmNc3dh8r1k59e70cf_QSB1njUOxjz9yMRg/LAKFtB0L41A.jpg\";\r\nexport const APP_IMG_SHARING = \"https://sun9-9.userapi.com/-Mukwo7NvSlTIbbWHZnEVU518ZqecRiHfiEpZw/A8oqlT09iKc.jpg\";\r\nexport const APP_IMG_SHARING_WALL = \"photo-197704164_457239022\";\r\nexport const USER_ID = Number(\r\n  new URLSearchParams(document.location.search).get(\"vk_user_id\")\r\n);","import React from \"react\";\r\nimport { Cell, Div, Avatar, Link } from \"@vkontakte/vkui\";\r\nimport Icon12Fire from \"@vkontakte/icons/dist/12/fire\";\r\nimport Icon16LikeOutline from \"@vkontakte/icons/dist/16/like_outline\";\r\nimport Icon16Like from \"@vkontakte/icons/dist/16/like\";\r\nimport Icon12Verified from \"@vkontakte/icons/dist/12/verified\";\r\n\r\nimport { formatBalance } from \"../helpers\";\r\n\r\nconst ResultUserItem = ({\r\n  id,\r\n  firstName,\r\n  lastName,\r\n  photoURL,\r\n  urlUser,\r\n  amountLikes,\r\n  activeTab,\r\n}) => {\r\n  return (\r\n    <Div className=\"itemShop\">\r\n      <span style={{ paddingLeft: \"15px\", color: \"#03023d\" }}>{id}</span>\r\n\r\n      <Cell\r\n        style={{ width: \"100%\" }}\r\n        before={\r\n          photoURL ? (\r\n            <Link href={urlUser} target=\"_blank\">\r\n              <Avatar src={photoURL} />\r\n            </Link>\r\n          ) : (\r\n            <Avatar src={\"https://vk.com/images/camera_200.png\"} />\r\n          )\r\n        }\r\n        description={\r\n          <Div className=\"itemMainTopUsersDescription\">\r\n            {activeTab === \"likes\" ? (\r\n              <Div className=\"itemMainTopUsersLike\">\r\n                <Div style={{ whiteSpace: \"nowrap\", color: \"white\" }}>\r\n                  Лайки: 54{\" \"}\r\n                </Div>\r\n              </Div>\r\n            ) : (\r\n              <Div className=\"itemMainTopUsersLike\">\r\n                <Div style={{ whiteSpace: \"nowrap\", color: \"white\" }}>\r\n                  Комментарии: 15\r\n                </Div>\r\n              </Div>\r\n            )}\r\n          </Div>\r\n        }\r\n      >\r\n        <Div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"start\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n            marginLeft: \"10px\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          {firstName} {lastName}\r\n        </Div>\r\n      </Cell>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport { ResultUserItem };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Cell, Div, Avatar, Link } from \"@vkontakte/vkui\";\r\n\r\nimport { UserCard } from \"../components\";\r\n\r\nconst GeneralInfoUser = ({ targetUserInfo }) => {\r\n  return (\r\n    <Div\r\n      className=\"panelHomeResult\"\r\n      // style={{\r\n      //   display: \"flex\",\r\n      //   justifyContent: \"center\",\r\n      //   alignItems: \"start\",\r\n      //   flexDirection: \"column\",\r\n      //   marginLeft: \"10px\",\r\n      // }}\r\n    >\r\n      <UserCard\r\n        fullName={targetUserInfo.fullName}\r\n        id={targetUserInfo.id}\r\n        photoURL={targetUserInfo.photoURL}\r\n      />\r\n      <Div>Дата регистрации: {targetUserInfo.regDate}</Div>\r\n      <Div>Последний онлайн: {targetUserInfo.lastSeen}</Div>\r\n      <Div>Город: {targetUserInfo.city}</Div>\r\n      <Div>Аудио: {targetUserInfo.audiosCount}</Div>\r\n      <Div>Фото: {targetUserInfo.photosCount}</Div>\r\n      <Div>Видео: {targetUserInfo.videosCount}</Div>\r\n      <Div>Друзей: {targetUserInfo.friendsCount}</Div>\r\n      <Div>Подписчиков: {targetUserInfo.followersCount}</Div>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport { GeneralInfoUser };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Cell, Div, Avatar, Link } from \"@vkontakte/vkui\";\r\n\r\nconst UserCard = ({ id, fullName, photoURL, firstName, lastName }) => {\r\n  const urlUser = \"https://vk.com/id\" + id;\r\n  return (\r\n    <Div\r\n      style={{\r\n        backgroundColor: \"#03023d\",\r\n      }}\r\n    >\r\n      <Cell\r\n        style={{ width: \"100%\" }}\r\n        before={\r\n          photoURL ? (\r\n            <Link href={urlUser} target=\"_blank\">\r\n              <Avatar src={photoURL} />\r\n            </Link>\r\n          ) : (\r\n            <Avatar src={\"https://vk.com/images/camera_200.png\"} />\r\n          )\r\n        }\r\n        description={\r\n          <Div className=\"itemMainTopUsersDescription\">\r\n            <Div className=\"itemMainTopUsersLike\">\r\n              <Div style={{ whiteSpace: \"nowrap\", color: \"white\" }}>\r\n                Возраст: 26\r\n              </Div>\r\n            </Div>\r\n            <Div className=\"itemMainTopUsersLike\">\r\n              <Div style={{ whiteSpace: \"nowrap\", color: \"white\" }}>\r\n                Город: Казань\r\n              </Div>\r\n            </Div>\r\n          </Div>\r\n        }\r\n      >\r\n        <Div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"start\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n            marginLeft: \"10px\",\r\n            color: \"white\",\r\n          }}\r\n        > \r\n          {fullName || `${firstName} ${lastName}`}\r\n        </Div>\r\n      </Cell>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport { UserCard };\r\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Input,\n  Panel,\n  Group,\n  Div,\n  Button,\n  HorizontalScroll,\n  PanelHeader,\n  Spinner,\n} from \"@vkontakte/vkui\";\n\nimport { ResultUserItem } from \"../items\";\nimport { GeneralInfoUser, UserCard } from \"../components\";\n\nimport { APIManager } from \"../helpers\";\nconst { callMethod } = APIManager;\n\nconst Home = ({\n  id,\n  go,\n  fetchedUser,\n  openPopoutSharing,\n  openModal,\n  USER_ID,\n  onChangeHandlerId,\n  getUserInfo,\n  targetUserInfo,\n  snackbar,\n  loadingSpinner,\n}) => {\n  const [dataResult, setDataResult] = useState([\n    {\n      firstName: \"Кирилл\",\n      lastName: \"Андреев\",\n      idVk: \"7777777\",\n      photoURL:\n        \"https://sun7-6.userapi.com/c857632/v857632332/1ee4a/MCaddnU_Gr0.jpg\",\n      amountLikes: 25,\n    },\n    {\n      firstName: \"Дмитрий\",\n      lastName: \"Брюханов\",\n      idVk: \"999999999\",\n      photoURL:\n        \"https://sun9-29.userapi.com/c857032/v857032227/7c38e/1ziePGYgGTk.jpg\",\n      amountLikes: 25,\n    },\n  ]);\n\n  const [activeTab, setActiveTab] = useState(\"general\");\n  const [userInfo, setUserInfo] = useState({});\n\n  useEffect(() => {\n    callMethod(\"getUser\").then(({ message }) => {\n      setUserInfo(message);\n    });\n  }, []);\n\n  const renderResult = dataResult.map((item, index) => {\n    const urlUser = \"https://vk.com/id\" + item.idVk;\n    return (\n      <ResultUserItem\n        key={index}\n        urlUser={urlUser}\n        photoURL={item.photoURL}\n        firstName={item.firstName}\n        lastName={item.lastName}\n        amountLikes={item.amountLikes}\n        activeTab={activeTab}\n      />\n    );\n  });\n\n  return (\n    <Panel id={id}>\n      <PanelHeader>Слежка 5.0</PanelHeader>\n      <Div\n        style={{\n          // display: \"flex\",\n          // justifyContent: \"center\",\n          // alignItems: \"center\",\n          // flexDirection: \"column\",\n          padding: \"10px 15px 15px 15px\",\n        }}\n      >\n        <Div className=\"panelHomeBalance\">\n          <Div className=\"flexSpaceBetweenRow\">\n            <UserCard\n              fullName={userInfo.fullName}\n              firstName={userInfo.firstName}\n              lastName={userInfo.lastName}\n              id={userInfo.id}\n              photoURL={userInfo.photoURL}\n            />\n            <Div></Div>\n          </Div>\n          <Div className=\"flexSpaceBetweenRow\">\n            <Div>Попыток: </Div>\n            <Div>{userInfo.attempts}</Div>\n          </Div>\n          <Div className=\"flexSpaceBetweenRow\">\n            <Div></Div>\n            <Div>\n              <Button\n                style={{\n                  backgroundColor: \"green\",\n                  color: \"white\",\n                }}\n                mode=\"commerce\"\n                size=\"m\"\n                stretched\n                onClick={openModal}\n              >\n                Пополнить\n              </Button>\n            </Div>\n          </Div>\n        </Div>\n\n        <Div>Введите ссылку на пользователя</Div>\n        <Div style={{ margin: \"10px 0px 10px 0px\" }}>\n          <Input\n            top=\"Введите ссылку на пользователя\"\n            placeholder={`https://vk.com/id${USER_ID}`}\n            onChange={onChangeHandlerId}\n            type=\"text\"\n          />\n        </Div>\n\n        {/* <FormLayout>\n          <Input\n            top=\"Введите ссылку на пользователя\"\n            placeholder={`https://vk.com/id${USER_ID}`}\n            onChange={onChangeHandlerId}\n            type=\"number\"\n          />\n        </FormLayout> */}\n        <Div>\n          <Button\n            style={{\n              backgroundColor: \"#03023d\",\n              color: \"white\",\n              borderRadius: \"13px\",\n            }}\n            size=\"xl\"\n            level=\"2\"\n            onClick={getUserInfo}\n            data-to=\"persik\"\n          >\n            Узнать\n          </Button>\n        </Div>\n\n        {targetUserInfo ? (\n          <>\n            <Div\n              style={{\n                // display: \"flex\",\n                // justifyContent: \"space-around\",\n                // alignItems: \"center\",\n                // flexDirection: \"row\",\n                margin: \"10px 0px 10px 0px\",\n              }}\n            >\n              <Div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  flexDirection: \"row\",\n                  margin: \"10px 0px 10px 0px\",\n                }}\n              >\n                <Button\n                  style={{\n                    backgroundColor:\n                      activeTab === \"general\" ? \"green\" : \"#03023d\",\n                    color: \"white\",\n                    width: \"40%\"\n                  }}\n                  mode=\"commerce\"\n                  size=\"m\"\n                  onClick={() => setActiveTab(\"general\")}\n                  \n                >\n                  Общая\n                </Button>\n                <Button\n                  style={{\n                    backgroundColor:\n                      activeTab === \"likes\" ? \"green\" : \"#03023d\",\n                    color: \"white\",\n                    width: \"40%\"\n                  }}\n                  mode=\"commerce\"\n                  size=\"m\"\n                  onClick={() => setActiveTab(\"likes\")}\n                >\n                  Лайкает\n                </Button>\n              </Div>\n              <Div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  flexDirection: \"row\",\n                  margin: \"10px 0px 10px 0px\",\n                }}\n              >\n                <Button\n                  style={{\n                    backgroundColor:\n                      activeTab === \"comments\" ? \"green\" : \"#03023d\",\n                    color: \"white\",\n                    width: \"40%\"\n                  }}\n                  mode=\"commerce\"\n                  size=\"m\"\n                  onClick={() => setActiveTab(\"comments\")}\n                >\n                  Комментирует\n                </Button>\n                <Button\n                  style={{\n                    backgroundColor:\n                      activeTab === \"groups\" ? \"green\" : \"#03023d\",\n                    color: \"white\",\n                    width: \"40%\"\n                  }}\n                  mode=\"commerce\"\n                  size=\"m\"\n                  onClick={() => setActiveTab(\"groups\")}\n                >\n                  Группы 18+\n                </Button>\n              </Div>\n            </Div>\n\n            {activeTab === \"general\" ? (\n              <GeneralInfoUser targetUserInfo={targetUserInfo} />\n            ) : (\n              \"\"\n            )}\n            {activeTab === \"likes\" ? <Div>{renderResult}</Div> : \"\"}\n            {activeTab === \"comments\" ? <Div>{renderResult}</Div> : \"\"}\n            {activeTab === \"groups\" ? <Div>{renderResult}</Div> : \"\"}\n          </>\n        ) : (\n          <>{loadingSpinner}</>\n        )}\n\n        <Div>\n          <Button\n            style={{\n              marginTop: \"10px\",\n              backgroundColor: \"green\",\n              color: \"white\",\n              borderRadius: \"13px\",\n            }}\n            size=\"xl\"\n            level=\"2\"\n            onClick={openPopoutSharing}\n            data-to=\"persik\"\n          >\n            Поделиться\n          </Button>\n        </Div>\n      </Div>\n      {snackbar}\n    </Panel>\n  );\n};\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport { Home };\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  ScreenSpinner,\n  View,\n  Snackbar,\n  Avatar,\n  ActionSheet,\n  ActionSheetItem,\n  Spinner\n} from \"@vkontakte/vkui\";\nimport Icon16Done from \"@vkontakte/icons/dist/16/done\";\nimport Icon16Cancel from \"@vkontakte/icons/dist/16/cancel\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport { Home } from \"./panels\";\nimport { ModalBuy } from \"./modal\";\n\nimport \"./styles/reset.sass\";\nimport \"./styles/icons.sass\";\nimport \"./styles/panels.sass\";\nimport \"./styles/items.sass\";\nimport \"./styles/components.sass\";\n\nimport {\n  APP_ID,\n  GROUP_ID,\n  QIWI_PUBLIC_KEY,\n  APP_AVATAR,\n  APP_IMG_SHARING,\n  APP_IMG_SHARING_WALL,\n  USER_ID,\n} from \"./config\";\n\nimport { APIManager, sharing } from \"./helpers\";\nconst { callMethod } = APIManager;\n\nconst App = () => {\n  let amount = 0;\n  let targetId = \"\";\n  let getPlatform = \"\";\n\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n  const [activeModal, setActiveModal] = useState(null);\n  const [snackbar, setSnackbar] = useState(null);\n  const [targetUserInfo, setTargetUserInfo] = useState(null);\n  const [loadingSpinner, setLoadingSpinner] = useState(null);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    // Определение ОС\n    bridge\n      .sendPromise(\"VKWebAppGetClientVersion\")\n      .then((result) => {\n        getPlatform = result.platform;\n\n        console.log(\"result.platform\", getPlatform);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  /**\n   * Делает редирект на ссылку link\n   */\n  const fireEvent = (link) => {\n    const a = document.createElement(\"a\");\n    a.href = link;\n    a.target = \"_blank\";\n\n    a.dispatchEvent(\n      new window.MouseEvent(\"click\", {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n      })\n    );\n  };\n\n  function qiwiPay(type, choose) {\n    window.QiwiCheckout.createInvoice({\n      publicKey: QIWI_PUBLIC_KEY,\n      amount: {\n        Бронзовый: 9,\n        Серебряный: 19,\n        Золотой: 39,\n        Платиновый: 69,\n      }[type],\n      comment: {\n        Бронзовый: `bronze 0 ${USER_ID} (не менять)`,\n        Серебряный: `silver 0 ${USER_ID} (не менять)`,\n        Золотой: `gold ${choose} ${USER_ID} (не менять)`,\n        Платиновый: `platinum ${choose} ${USER_ID} (не менять)`,\n      }[type],\n    })\n      .then((response) => {\n        console.log(\"qiwi vip\", response);\n      })\n      .catch((error) => {\n        console.log(\"QIWI VIP ERROR:\", error);\n      });\n  }\n\n  function payVkPay(type, choose) {\n    bridge\n      .sendPromise(\"VKWebAppOpenPayForm\", {\n        app_id: APP_ID,\n        action: \"pay-to-group\",\n        params: {\n          amount: {\n            Бронзовый: 9,\n            Серебряный: 19,\n            Золотой: 39,\n            Платиновый: 69,\n          }[type],\n          group_id: GROUP_ID,\n          description: {\n            Бронзовый: `bronze 0 (не менять)`,\n            Серебряный: `silver 0 (не менять)`,\n            Золотой: `gold ${choose} (не менять)`,\n            Платиновый: `platinum ${choose} (не менять)`,\n          }[type],\n        },\n      })\n      .then((response) => {\n        console.log(\"vkpay vip\", response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function onChangeHandlerAmount(e) {\n    const value = e.target.value.trim();\n    amount = +value;\n\n    console.log(\"onChangeHandlerAmount targetId\", amount);\n  }\n\n  function onChangeHandlerId(e) {\n    const value = e.target.value.trim();\n    targetId = value;\n\n    console.log(\"onChangeHandlerId targetId\", targetId);\n  }\n\n  function openPayment(type, choose) {\n    setActiveModal(null);\n    bridge\n      .sendPromise(\"VKWebAppAllowMessagesFromGroup\", {\n        group_id: GROUP_ID,\n      })\n      .then((res) => {\n        console.log(\"result\", res);\n        if (res) {\n          setPopout(\n            <>\n              <ActionSheet onClose={() => setPopout(null)}>\n                <ActionSheetItem\n                  autoclose\n                  onClick={() => qiwiPay(type, choose)}\n                >\n                  Оплатить через QIWI\n                </ActionSheetItem>\n                <ActionSheetItem\n                  autoclose\n                  onClick={() => payVkPay(type, choose)}\n                >\n                  Оплатить через VK Pay\n                </ActionSheetItem>\n              </ActionSheet>\n            </>\n          );\n        }\n      });\n  }\n\n  function openAlert(text, backgroundColor = \"green\") {\n    if (snackbar) return;\n    setSnackbar(\n      <Snackbar\n        duration=\"7000\"\n        layout=\"horizontal\"\n        onClose={() => setSnackbar(null)}\n        before={\n          <Avatar size={24} style={{ backgroundColor }}>\n            {backgroundColor === \"green\" ? (\n              <Icon16Done fill=\"#fff\" width={14} height={14} />\n            ) : (\n              <Icon16Cancel fill=\"#fff\" width={14} height={14} />\n            )}\n          </Avatar>\n        }\n      >\n        {text}\n      </Snackbar>\n    );\n  }\n\n  function openModal() {\n    setActiveModal(\n      <ModalBuy\n        setActiveModal={setActiveModal}\n        getDonateLink={getDonateLink}\n        APP_AVATAR={APP_AVATAR}\n        onChangeHandlerAmount={onChangeHandlerAmount}\n      />\n    );\n  }\n\n  function openPopoutSharing() {\n    setActiveModal(null);\n    setPopout(\n      <>\n        <ActionSheet onClose={() => setPopout(null)}>\n          <ActionSheetItem autoclose onClick={() => sharing(\"share-link\")}>\n            Поделиться ссылкой\n          </ActionSheetItem>\n          <ActionSheetItem\n            autoclose\n            onClick={() => sharing(\"copy-link\", openAlert)}\n          >\n            Скопировать ссылку\n          </ActionSheetItem>\n          <ActionSheetItem autoclose onClick={() => sharing(\"story\")}>\n            Поделиться в истории\n          </ActionSheetItem>\n          <ActionSheetItem\n            autoclose\n            onClick={(e) => sharing(\"share-wall\", null, e)}\n          >\n            Поделиться на стене\n          </ActionSheetItem>\n        </ActionSheet>\n      </>\n    );\n  }\n\n  function getUserInfo() {\n\n    if (targetId === \"\") {\n      return openAlert(\"Введите ссылку на пользователя\", \"red\");\n    }\n    setLoadingSpinner(\n      <div className=\"flexCenterColumn\">\n        <Spinner size=\"large\" style={{ marginTop: 20 }}/>\n      </div>\n    );\n\n    callMethod(\"getUserInfo\", {\n      targetUser: targetId,\n    }).then(({ status, message }) => {\n      if (status === \"success\") {\n        setLoadingSpinner(null);\n        setTargetUserInfo(message.generalInfo);\n      } else {\n        openAlert(message, \"red\");\n      }\n    });\n  }\n\n  function getDonateLink(sum) {\n    console.log(sum);\n\n    callMethod(\"getDonateLink\", {\n      amount: sum,\n    }).then(({ status, message }) => {\n      console.log(message);\n      if (status === \"success\") {\n      \n        fireEvent(message);\n      } else {\n        openAlert(message, \"red\");\n      }\n    });\n  }\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <View\n      activePanel={activePanel}\n      popout={popout}\n      header={false}\n      modal={activeModal}\n    >\n      <Home\n        id=\"home\"\n        fetchedUser={fetchedUser}\n        go={go}\n        openAlert={openAlert}\n        snackbar={snackbar}\n        openPopoutSharing={openPopoutSharing}\n        openModal={openModal}\n        USER_ID={USER_ID}\n        onChangeHandlerId={onChangeHandlerId}\n        getUserInfo={getUserInfo}\n        targetUserInfo={targetUserInfo}\n        loadingSpinner={loadingSpinner}\n      />\n    </View>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// if (process.env.NODE_ENV === \"development\") {\n//   import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n","/**\r\n * @typedef {Object} Answer\r\n * @property {'success' | 'denied'} status - Статус ответа\r\n * @property {any} message - Сообщение ответа\r\n */\r\n\r\n/**\r\n * Класс для работы с API\r\n */\r\nexport class APIManager {\r\n    static baseURL = 'https://one-digitalspace.ru/spy/rest-api';\r\n\r\n    /**\r\n     * @param {string} methodName - Имя метода\r\n     * @param {object} params - Параметры метода\r\n     * @returns {Promise<Answer>} \r\n     */\r\n    static async callMethod(methodName, params = {}) {\r\n        const response = await fetch(\r\n            `${APIManager.baseURL}/${methodName}`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    ...params,\r\n                    search: document.location.search\r\n                }),\r\n                method: 'POST'\r\n            }\r\n        );\r\n    \r\n        return response.json();\r\n    }\r\n}","import bridge from \"@vkontakte/vk-bridge\";\r\nimport { APP_ID, APP_IMG_SHARING, APP_IMG_SHARING_WALL, USER_ID } from \"../config\";\r\n\r\nexport function sharing(type, openAlert, e) {\r\n  switch (type) {\r\n    case \"share-link\":\r\n      shareLink();\r\n      break;\r\n    case \"copy-link\":\r\n      copyLink(openAlert);\r\n      break;\r\n    case \"story\":\r\n      story();\r\n      break;\r\n    case \"share-wall\":\r\n      share(e);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction shareLink() {\r\n  const link = `https://vk.com/app${APP_ID}#${USER_ID}`;\r\n  bridge.send(\"VKWebAppShare\", {\r\n    link: link,\r\n  });\r\n}\r\n\r\n// Копирование в буфер\r\nfunction copyLink(openAlert) {\r\n  const link = `https://vk.com/app${APP_ID}#${USER_ID}`;\r\n  bridge\r\n    .sendPromise(\"VKWebAppGetClientVersion\")\r\n    .then((result) => {\r\n      console.log(result.platform);\r\n      if (result.platform === \"web\" || result.platform === \"mobile-web\") {\r\n        window.navigator.clipboard.writeText(link).then(\r\n          () => {\r\n            console.log(\"successfully set\", link);\r\n            openAlert(\"Ссылка скопирована\");\r\n          },\r\n          () => {\r\n            console.log(\"write failed\", link);\r\n          }\r\n        );\r\n      } else {\r\n        bridge.send(\"VKWebAppCopyText\", { text: link });\r\n        openAlert(\"Ссылка скопирована\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"error\", error);\r\n    });\r\n}\r\n\r\n//  Поделиться в истории\r\nfunction story() {\r\n  const url = `https://vk.com/app${APP_ID}#${USER_ID}`;\r\n\r\n  bridge.sendPromise(\"VKWebAppShowStoryBox\", {\r\n    background_type: \"image\",\r\n    url: APP_IMG_SHARING,\r\n    attachment: {\r\n      text: \"go_to\",\r\n      type: \"url\",\r\n      url: url,\r\n    },\r\n  });\r\n}\r\n\r\n//  ДОБАВЛЕНИЕ РЕПОСТА НА СТЕНУ ПОЛЬЗОВАТЕЛЯ\r\nfunction share(e) {\r\n  e.preventDefault();\r\n  const url = `https://vk.com/app${APP_ID}#${USER_ID}`;\r\n  const urlPhotoStories = `${APP_IMG_SHARING_WALL},https://vk.com/app${APP_ID}#${USER_ID}`;\r\n  const textStories = `Заходи в приложение и узнай, кого лайкает или кому пишет твоя вторая половинка, Приложение - ${url}`;\r\n\r\n  bridge.send(\"VKWebAppShowWallPostBox\", {\r\n    message: textStories,\r\n    attachments: urlPhotoStories,\r\n  });\r\n}\r\n","export * from './ModalBuy';\r\nexport * from './ModalBuyVIP';\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ModalRoot,\r\n  ModalCard,\r\n  FormLayout,\r\n  Input,\r\n  Avatar,\r\n  Div,\r\n  Radio,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { APIManager, sharing } from \"../helpers\";\r\nconst { callMethod } = APIManager;\r\n\r\nconst ModalBuy = ({\r\n  setActiveModal,\r\n  onChangeHandlerAmount,\r\n  APP_AVATAR,\r\n  getDonateLink,\r\n}) => {\r\n  const [sum, setSum] = useState(49);\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    callMethod(\"getDonateLink\", {\r\n      amount: sum,\r\n    }).then(({ status, message }) => {\r\n      console.log(message);\r\n      if (status === \"success\") {\r\n        setLink(message);\r\n      } else {\r\n        // openAlert(message, \"red\");\r\n        console.log(message);\r\n      }\r\n    });\r\n  }, [sum]);\r\n\r\n  return (\r\n    <>\r\n      <ModalRoot activeModal=\"buy\">\r\n        <ModalCard\r\n          id=\"buy\"\r\n          onClose={() => setActiveModal(null)}\r\n          icon={<Avatar size={72} src={APP_AVATAR} />}\r\n          header=\"Выберите сумму пополнения\"\r\n          caption={\r\n            <>\r\n              {/* <FormLayout>\r\n                <Input\r\n                  top=\"Введите сумму в рублях\"\r\n                  placeholder=\"49\"\r\n                  onChange={onChangeHandlerAmount}\r\n                  type=\"number\"\r\n                />\r\n              </FormLayout> */}\r\n              {/* <Div>Выберите сумму пополнения:</Div> */}\r\n              <Div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"space-around\",\r\n                  flexDirection: \"row\",\r\n                  width: \"100%\",\r\n                }}\r\n              >\r\n                <Radio defaultChecked name=\"radio\" onClick={() => setSum(49)}>\r\n                  <span style={{ whiteSpace: \"nowrap\" }}>49 ₽</span>\r\n                </Radio>\r\n                <Radio name=\"radio\" onClick={() => setSum(109)}>\r\n                  <span style={{ whiteSpace: \"nowrap\" }}>109 ₽</span>\r\n                </Radio>\r\n                <Radio name=\"radio\" onClick={() => setSum(189)}>\r\n                  <span style={{ whiteSpace: \"nowrap\" }}>189 ₽</span>\r\n                </Radio>\r\n              </Div>\r\n              <Div>\r\n                <Button\r\n                  style={{\r\n                    backgroundColor: \"#03023d\",\r\n                    color: \"white\",\r\n                    borderRadius: \"13px\",\r\n                  }}\r\n                  size=\"xl\"\r\n                  level=\"2\"\r\n                  href={link}\r\n                  target=\"_blank\"\r\n                  onClick={() => setActiveModal(null)}\r\n                >\r\n                  Пополнить\r\n                </Button>\r\n              </Div>\r\n            </>\r\n          }\r\n          // actions={[\r\n          //   {\r\n          //     title: \"Пополнить\",\r\n          //     mode: \"commerce\",\r\n          //     action: () => {\r\n          //       getDonateLink(sum);\r\n          //     },\r\n          //   },\r\n          // ]}\r\n        ></ModalCard>\r\n      </ModalRoot>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { ModalBuy };\r\n"],"sourceRoot":""}