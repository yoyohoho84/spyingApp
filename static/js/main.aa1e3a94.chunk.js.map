{"version":3,"sources":["config.js","items/ResultUserItem.js","items/ButtonСategory.js","components/GeneralInfoUser.js","components/UserCard.js","components/ListButton.js","panels/Home.js","App.js","index.js","helpers/api-manager.js","helpers/sharing.js","modal/index.js","modal/ModalBuy.js"],"names":["APP_ID","GROUP_ID","APP_AVATAR","APP_IMG_SHARING","APP_IMG_SHARING_WALL","USER_ID","Number","URLSearchParams","document","location","search","get","ResultUserItem","id","fullName","photoURL","urlUser","likes","activeTab","type","className","style","paddingLeft","color","width","marginLeft","before","href","target","src","description","whiteSpace","display","justifyContent","alignItems","flexDirection","ButtonСategory","setActiveTab","tabName","tabType","openAlert","backgroundColor","mode","size","onClick","stretched","GeneralInfoUser","targetUserInfo","generalInfo","regDate","lastSeen","city","audiosCount","photosCount","videosCount","friendsCount","followersCount","UserCard","firstName","lastName","age","openModal","ListButton","margin","Home","APIManager","callMethod","fetchedUser","go","openPopoutSharing","onChangeHandlerId","getUserInfo","snackbar","loadingSpinner","userInfo","renderTargetUserInfo","inputValue","renderUserGroups","getUser","promoBannerProps","setPromoBannerProps","renderHiddenFriends","renderHiddingFriends","left","background","padding","height","fill","title","attempts","top","placeholder","onChange","value","borderRadius","level","length","marginTop","data-to","vertical","bannerData","onClose","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","activeModal","setActiveModal","setSnackbar","setTargetUserInfo","setRenderTargetUserInfo","setLoadingSpinner","setUserInfo","setInpuValue","setRenderUserGroups","setRenderHiddenFriends","setRenderHiddingFriends","addGroup","bridge","send","group_id","then","result","console","log","onChangeHandlerAmount","e","trim","text","duration","layout","message","useEffect","a","user","subscribe","detail","data","body","setAttribute","scheme","fetchData","sendPromise","platform","catch","err","setTimeout","header","modal","currentTarget","dataset","to","autoclose","sharing","targetUser","status","likesInfo","map","item","index","key","groupsInfo","name","hiddenFriends","hiddingFriends","ReactDOM","render","getElementById","methodName","params","fetch","baseURL","headers","JSON","stringify","method","response","json","link","shareLink","window","navigator","clipboard","writeText","error","copyLink","url","background_type","attachment","story","preventDefault","urlPhotoStories","textStories","attachments","share","ModalBuy","getDonateLink","sum","setSum","setLink","amount","icon","caption","defaultChecked"],"mappings":"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","file":"static/js/main.aa1e3a94.chunk.js","sourcesContent":["export const APP_ID = 7559432;\r\nexport const GROUP_ID = 197704164;\r\nexport const QIWI_PUBLIC_KEY = \"48e7qUxn9T7RyYE1MVZswX1FRSbE6iyCj2gCRwwF3Dnh5XrasNTx3BGPiMsyXQFNKQhvukniQG8RTVhYm3iP6eNeguoXyC99Aq22J8SZPKNgc2WqKx64qaPHePwqThccSrj3HPYcWtCAAb4y8zT5JD6kUUSyJK1sVaG2XrP9hXNzXzo5zVD2iWC9o81QD\";\r\nexport const APP_AVATAR = \"https://sun9-66.userapi.com/w_MnmNc3dh8r1k59e70cf_QSB1njUOxjz9yMRg/LAKFtB0L41A.jpg\";\r\nexport const APP_IMG_SHARING = \"https://sun9-9.userapi.com/-Mukwo7NvSlTIbbWHZnEVU518ZqecRiHfiEpZw/A8oqlT09iKc.jpg\";\r\nexport const APP_IMG_SHARING_WALL = \"photo-197704164_457239022\";\r\nexport const USER_ID = Number(\r\n  new URLSearchParams(document.location.search).get(\"vk_user_id\")\r\n);","import React from \"react\";\r\nimport { Cell, Div, Avatar, Link } from \"@vkontakte/vkui\";\r\nimport Icon12Fire from \"@vkontakte/icons/dist/12/fire\";\r\nimport Icon16LikeOutline from \"@vkontakte/icons/dist/16/like_outline\";\r\nimport Icon16Like from \"@vkontakte/icons/dist/16/like\";\r\nimport Icon12Verified from \"@vkontakte/icons/dist/12/verified\";\r\n\r\nimport { formatBalance } from \"../helpers\";\r\n\r\nconst ResultUserItem = ({\r\n  id,\r\n  fullName,\r\n  photoURL,\r\n  urlUser,\r\n  likes,\r\n  activeTab,\r\n  type,\r\n}) => {\r\n  return (\r\n    <Div className=\"itemShop\">\r\n      <></>\r\n      <span style={{ paddingLeft: \"15px\", color: \"white\" }}>{id}</span>\r\n      <Cell\r\n        style={{ width: \"100%\", marginLeft: \"10px\"}}\r\n        before={\r\n          photoURL ? (\r\n            <Link href={urlUser} target=\"_blank\">\r\n              <Avatar src={photoURL} />\r\n            </Link>\r\n          ) : (\r\n            <Avatar src={\"https://vk.com/images/camera_200.png\"} />\r\n          )\r\n        }\r\n        description={\r\n          <>\r\n            {type === \"likes\" ? (\r\n              <Div className=\"itemMainTopUsersDescription\">\r\n                {activeTab === \"likes\" ? (\r\n                  <Div className=\"itemMainTopUsersLike\">\r\n                    <Div style={{ whiteSpace: \"nowrap\", color: \"white\" }}>\r\n                      Лайки: {likes}\r\n                    </Div>\r\n                  </Div>\r\n                ) : (\r\n                  <Div className=\"itemMainTopUsersLike\">\r\n                    <Div style={{ whiteSpace: \"nowrap\", color: \"white\" }}>\r\n                      Комментарии: 15\r\n                    </Div>\r\n                  </Div>\r\n                )}\r\n              </Div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </>\r\n        }\r\n      >\r\n        <Div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"start\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n            marginLeft: \"10px\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          {fullName}\r\n        </Div>\r\n      </Cell>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport { ResultUserItem };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Div, Button } from \"@vkontakte/vkui\";\r\n\r\nconst ButtonСategory = ({\r\n  activeTab,\r\n  setActiveTab,\r\n  tabName,\r\n  tabType,\r\n  openAlert\r\n}) => {\r\n  return (\r\n      <Button\r\n        style={{\r\n          backgroundColor: activeTab === tabType ? \"green\" : \"#184a6e\",\r\n          color: \"white\",\r\n          width: \"48%\",\r\n        }}\r\n        mode=\"commerce\"\r\n        size=\"m\"\r\n        onClick={tabType === \"comments\" ? () => openAlert(\"Раздел еще в разработке\", \"red\") : () => setActiveTab(tabType)}\r\n        stretched={tabType === \"groups\" ? true : false}\r\n      >\r\n        {tabName}\r\n      </Button>\r\n  );\r\n};\r\n\r\nexport { ButtonСategory };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Cell, Div, Avatar, Link } from \"@vkontakte/vkui\";\r\n\r\nimport { UserCard } from \"../components\";\r\n\r\nconst GeneralInfoUser = ({ targetUserInfo }) => {\r\n  return (\r\n    <Div\r\n      className=\"panelHomeResult\"\r\n      // style={{\r\n      //   display: \"flex\",\r\n      //   justifyContent: \"center\",\r\n      //   alignItems: \"start\",\r\n      //   flexDirection: \"column\",\r\n      //   marginLeft: \"10px\",\r\n      // }}\r\n    >\r\n      <UserCard\r\n        fullName={targetUserInfo.generalInfo.fullName}\r\n        id={targetUserInfo.generalInfo.id}\r\n        photoURL={targetUserInfo.generalInfo.photoURL}\r\n        type={\"getUserInfo\"}\r\n        \r\n      />\r\n      <Div>Дата регистрации: {targetUserInfo.generalInfo.regDate}</Div>\r\n      <Div>Последний онлайн: {targetUserInfo.generalInfo.lastSeen}</Div>\r\n      <Div>Город: {targetUserInfo.generalInfo.city}</Div>\r\n      <Div>Аудио: {targetUserInfo.generalInfo.audiosCount}</Div>\r\n      <Div>Фото: {targetUserInfo.generalInfo.photosCount}</Div>\r\n      <Div>Видео: {targetUserInfo.generalInfo.videosCount}</Div>\r\n      <Div>Друзей: {targetUserInfo.generalInfo.friendsCount}</Div>\r\n      <Div>Подписчиков: {targetUserInfo.generalInfo.followersCount}</Div>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport { GeneralInfoUser };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Cell, Div, Avatar, Link, Button } from \"@vkontakte/vkui\";\r\nimport Icon28LockOutline from \"@vkontakte/icons/dist/28/lock_outline\";\r\n\r\nconst UserCard = ({\r\n  id,\r\n  fullName,\r\n  photoURL,\r\n  firstName,\r\n  lastName,\r\n  city,\r\n  age,\r\n  type,\r\n  openModal\r\n}) => {\r\n  const urlUser = \"https://vk.com/id\" + id;\r\n  return (\r\n    <Div\r\n      style={{\r\n        backgroundColor: \"#184a6e\",\r\n      }}\r\n    >\r\n      <Cell\r\n        style={{ width: \"100%\" }}\r\n        before={\r\n          photoURL ? (\r\n            <Link href={urlUser} target=\"_blank\">\r\n              <Avatar src={photoURL} />\r\n            </Link>\r\n          ) : (\r\n            <Avatar src={\"https://vk.com/images/camera_200.png\"} />\r\n          )\r\n        }\r\n        description={\r\n          type !== \"getUserInfo\" ? (\r\n            <Div className=\"itemMainTopUsersDescription\">\r\n              {age !== \"Скрыто\" ? (\r\n                <Div className=\"itemMainTopUsersLike\">\r\n                  <Div style={{ whiteSpace: \"nowrap\", color: \"white\" }}>\r\n                    Возраст: {age}\r\n                  </Div>\r\n                </Div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <Div className=\"itemMainTopUsersLike\">\r\n                <Div style={{ whiteSpace: \"nowrap\", color: \"white\" }}>\r\n                  Город: {city}\r\n                </Div>\r\n              </Div>\r\n              {/* <Div className=\"itemMainTopUsersLike\">\r\n                <Div>\r\n                  <Button\r\n                  before={<Icon28LockOutline fill=\"white\" width={16} height={16}/>}\r\n                    style={{\r\n                      backgroundColor: \"green\",\r\n                      color: \"white\",\r\n                    }}\r\n                    mode=\"commerce\"\r\n                    size=\"m\"\r\n                    stretched\r\n                    \r\n                    onClick={() => openModal(\"guard\")}\r\n                  >\r\n                    Купить защиту\r\n                  </Button>\r\n                </Div>\r\n              </Div> */}\r\n            </Div>\r\n          ) : (\r\n            <></>\r\n          )\r\n        }\r\n      >\r\n        <Div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"start\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"row\",\r\n            marginLeft: \"10px\",\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          {fullName || `${firstName} ${lastName}`}\r\n        </Div>\r\n      </Cell>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport { UserCard };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Div, Button } from \"@vkontakte/vkui\";\r\n\r\nimport { ButtonСategory } from \"../items\";\r\n\r\nconst ListButton = ({ activeTab, setActiveTab, openAlert }) => {\r\n  return (\r\n    <>\r\n      <Div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"row\",\r\n          margin: \"10px 0px 10px 0px\",\r\n        }}\r\n      >\r\n        <ButtonСategory\r\n          activeTab={activeTab}\r\n          setActiveTab={setActiveTab}\r\n          tabType={\"general\"}\r\n          tabName={\"Общая\"}\r\n        />\r\n        <ButtonСategory\r\n          activeTab={activeTab}\r\n          setActiveTab={setActiveTab}\r\n          tabType={\"likes\"}\r\n          tabName={\"Лайкают\"}\r\n        />\r\n      </Div>\r\n\r\n      <Div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"row\",\r\n          margin: \"10px 0px 10px 0px\",\r\n        }}\r\n      >\r\n        <ButtonСategory\r\n          activeTab={activeTab}\r\n          setActiveTab={setActiveTab}\r\n          tabType={\"hidden-friends\"}\r\n          tabName={\"Скрытые друзья\"}\r\n        />\r\n        <ButtonСategory\r\n          activeTab={activeTab}\r\n          setActiveTab={setActiveTab}\r\n          tabType={\"hidding-friends\"}\r\n          tabName={\"Скрывающие друзья\"}\r\n        />\r\n      </Div>\r\n      <Div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"row\",\r\n          margin: \"10px 0px 10px 0px\",\r\n        }}\r\n      >\r\n        {/* <ButtonСategory\r\n          activeTab={activeTab}\r\n          setActiveTab={setActiveTab}\r\n          tabType={\"comments\"}\r\n          tabName={\"Комментирует\"}\r\n          openAlert={openAlert}\r\n        /> */}\r\n        <ButtonСategory\r\n          activeTab={activeTab}\r\n          setActiveTab={setActiveTab}\r\n          tabType={\"groups\"}\r\n          tabName={\"Группы 18+\"}\r\n        />\r\n      </Div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { ListButton };\r\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Input,\n  Panel,\n  Group,\n  Div,\n  Button,\n  HorizontalScroll,\n  PanelHeader,\n  Spinner,\n  FixedLayout,\n  PromoBanner,\n} from \"@vkontakte/vkui\";\nimport Icon28RefreshOutline from \"@vkontakte/icons/dist/28/refresh_outline\";\n\nimport { ResultUserItem } from \"../items\";\nimport { GeneralInfoUser, UserCard, ListButton } from \"../components\";\n\nimport { APIManager } from \"../helpers\";\nconst { callMethod } = APIManager;\n\nconst Home = ({\n  id,\n  go,\n  fetchedUser,\n  openPopoutSharing,\n  openModal,\n  USER_ID,\n  onChangeHandlerId,\n  getUserInfo,\n  targetUserInfo,\n  snackbar,\n  loadingSpinner,\n  userInfo,\n  renderTargetUserInfo,\n  activeTab,\n  setActiveTab,\n  inputValue,\n  renderUserGroups,\n  getUser,\n  openAlert,\n  promoBannerProps,\n  setPromoBannerProps,\n  renderHiddenFriends,\n  renderHiddingFriends,\n}) => {\n  return (\n    <Panel id={id}>\n      <PanelHeader\n        left={\n          <Button\n            style={{\n              marginLeft: \"20px\",\n              background: \"inherit\",\n              // borderColor: \"#03023d\",\n              // borderWidth: \"2px\",\n              padding: \"0px\",\n            }}\n          >\n            <Icon28RefreshOutline\n              width={24}\n              height={24}\n              fill=\"green\"\n              // style={{ marginLeft: \"20px\" }}\n              onClick={getUser}\n            />\n          </Button>\n        }\n      >\n        Слежка 5.0\n      </PanelHeader>\n      <Div\n        style={{\n          // display: \"flex\",\n          // justifyContent: \"center\",\n          // alignItems: \"center\",\n          // flexDirection: \"column\",\n          padding: \"10px 15px 15px 15px\",\n        }}\n      >\n        <Div className=\"panelHomeBalance\">\n          <Div className=\"flexSpaceBetweenRow\">\n            {fetchedUser && (\n              <UserCard\n                fullName={userInfo.fullName}\n                firstName={userInfo.firstName}\n                lastName={userInfo.lastName}\n                id={userInfo.id}\n                photoURL={userInfo.photoURL}\n                city={fetchedUser.city.title}\n                age={userInfo.age}\n                openModal={openModal}\n              />\n            )}\n\n            <Div></Div>\n          </Div>\n          <Div className=\"flexSpaceBetweenRow\">\n            <Div></Div>\n            <Div>Слежек: {userInfo.attempts}</Div>\n          </Div>\n          <Div className=\"flexSpaceBetweenRow\">\n            <Div></Div>\n            <Div>\n              <Button\n                style={{\n                  backgroundColor: \"green\",\n                  color: \"white\",\n                }}\n                mode=\"commerce\"\n                size=\"m\"\n                stretched\n                onClick={() => openModal(\"buy\")}\n              >\n                Пополнить\n              </Button>\n            </Div>\n          </Div>\n        </Div>\n\n        <Div>Введите ссылку на пользователя</Div>\n        <Div style={{ margin: \"10px 0px 10px 0px\" }}>\n          <Input\n            top=\"Введите ссылку на пользователя\"\n            placeholder={`https://vk.com/id${USER_ID}`}\n            onChange={onChangeHandlerId}\n            type=\"text\"\n            value={inputValue}\n          />\n        </Div>\n        <Div>\n          <Button\n            style={{\n              backgroundColor: \"#184a6e\",\n              color: \"white\",\n              borderRadius: \"13px\",\n            }}\n            size=\"xl\"\n            level=\"2\"\n            onClick={getUserInfo}\n          >\n            Узнать\n          </Button>\n        </Div>\n\n        {targetUserInfo ? (\n          <>\n            <Div\n              style={{\n                margin: \"10px 0px 10px 0px\",\n              }}\n            >\n              <ListButton\n                activeTab={activeTab}\n                setActiveTab={setActiveTab}\n                openAlert={openAlert}\n              />\n            </Div>\n\n            {activeTab === \"general\" ? (\n              <GeneralInfoUser targetUserInfo={targetUserInfo} />\n            ) : (\n              \"\"\n            )}\n            {activeTab === \"likes\" ? (\n              <>\n                {renderTargetUserInfo.length !== 0 ? (\n                  renderTargetUserInfo\n                ) : (\n                  <Div className=\"flexCenterColumn\">\n                    {\" \"}\n                    У текущего пользователя недостаточно данных для определения\n                    лайков\n                  </Div>\n                )}\n              </>\n            ) : (\n              \"\"\n            )}\n            {/* {activeTab === \"comments\" ? <Div>{renderTargetUserInfo}</Div> : \"\"} */}\n            {activeTab === \"groups\" ? (\n              <>\n                {renderUserGroups.length !== 0 ? (\n                  renderUserGroups\n                ) : (\n                  <Div className=\"flexCenterColumn\">\n                    {\" \"}\n                    У текущего пользователя нет групп 18+\n                  </Div>\n                )}\n              </>\n            ) : (\n              \"\"\n            )}\n\n            {activeTab === \"hidden-friends\" ? (\n              <>\n                {renderHiddenFriends.length !== 0 ? (\n                  renderHiddenFriends\n                ) : (\n                  <Div className=\"flexCenterColumn\">\n                    У текущего пользователя нету скрытых друзей\n                  </Div>\n                )}\n              </>\n            ) : (\n              \"\"\n            )}\n\n            {activeTab === \"hidding-friends\" ? (\n              <>\n                {renderHiddingFriends.length !== 0 ? (\n                  renderHiddingFriends\n                ) : (\n                  <Div className=\"flexCenterColumn\">\n                    {\" \"}\n                    У текущего пользователя нету скрывающих друзей\n                  </Div>\n                )}\n              </>\n            ) : (\n              \"\"\n            )}\n\n          </>\n        ) : (\n          <>{loadingSpinner}</>\n        )}\n\n        <Div>\n          <Button\n            style={{\n              marginTop: \"10px\",\n              backgroundColor: \"green\",\n              color: \"white\",\n              borderRadius: \"13px\",\n            }}\n            size=\"xl\"\n            level=\"2\"\n            onClick={openPopoutSharing}\n            data-to=\"persik\"\n          >\n            Поделиться\n          </Button>\n        </Div>\n      </Div>\n      {promoBannerProps && (\n        <FixedLayout vertical=\"bottom\">\n          <PromoBanner\n            bannerData={promoBannerProps}\n            onClose={() => setPromoBannerProps(null)}\n          />\n        </FixedLayout>\n      )}\n\n      {snackbar}\n    </Panel>\n  );\n};\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport { Home };\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport {\n  ScreenSpinner,\n  View,\n  Snackbar,\n  Avatar,\n  ActionSheet,\n  ActionSheetItem,\n  Spinner,\n  ConfigProvider,\n} from \"@vkontakte/vkui\";\nimport Icon16Done from \"@vkontakte/icons/dist/16/done\";\nimport Icon16Cancel from \"@vkontakte/icons/dist/16/cancel\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport { Home } from \"./panels\";\nimport { ModalBuy } from \"./modal\";\nimport { ResultUserItem } from \"./items\";\n\nimport \"./styles/reset.sass\";\nimport \"./styles/icons.sass\";\nimport \"./styles/panels.sass\";\nimport \"./styles/items.sass\";\nimport \"./styles/components.sass\";\n\nimport {\n  APP_ID,\n  GROUP_ID,\n  QIWI_PUBLIC_KEY,\n  APP_AVATAR,\n  APP_IMG_SHARING,\n  APP_IMG_SHARING_WALL,\n  USER_ID,\n} from \"./config\";\n\nimport { APIManager, sharing } from \"./helpers\";\nconst { callMethod } = APIManager;\n\nconst App = () => {\n  let amount = 0;\n  let targetId = \"\";\n  let getPlatform = \"\";\n\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n  const [activeModal, setActiveModal] = useState(null);\n  const [snackbar, setSnackbar] = useState(null);\n  const [targetUserInfo, setTargetUserInfo] = useState(null);\n  const [renderTargetUserInfo, setRenderTargetUserInfo] = useState(null);\n  const [loadingSpinner, setLoadingSpinner] = useState(null);\n  const [userInfo, setUserInfo] = useState({});\n  const [activeTab, setActiveTab] = useState(\"general\");\n  const [inputValue, setInpuValue] = useState(\"\");\n  const [renderUserGroups, setRenderUserGroups] = useState(null);\n  const [renderHiddenFriends, setRenderHiddenFriends] = useState(null);\n  const [renderHiddingFriends, setRenderHiddingFriends] = useState(null);\n  const [scheme, setScheme] = useState(\"\");\n  const [promoBannerProps, setPromoBannerProps] = useState();\n\n  useEffect(() => {\n    // bridge.subscribe(async ({ detail: { type, data } }) => {\n    //   if (type === \"VKWebAppUpdateConfig\") {\n    //     const schemeAttribute = document.createAttribute(\"scheme\");\n    //     schemeAttribute.value = data.scheme ? data.scheme : \"bright_light\";\n    //     document.body.attributes.setNamedItem(schemeAttribute);\n    //   }\n    // });\n\n    bridge.subscribe(async ({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        document.body.setAttribute(\n          \"scheme\",\n          data.scheme ? data.scheme : \"bright_light\"\n        );\n      }\n    });\n\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  useEffect(() => {\n    // Определение ОС\n    bridge\n      .sendPromise(\"VKWebAppGetClientVersion\")\n      .then((result) => {\n        getPlatform = result.platform;\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    setTimeout(addGroup, 2000);\n    // setTimeout(nativeAds, 5000);\n\n\n  }, []);\n\n  // useEffect(() => {\n  //   const timerId = setInterval(() => {\n  //     console.log(\"adsBanner refresh\");\n\n  //     adsBanner();\n  //   }, 5000);\n\n  //   bridge.subscribe((e) => {\n  //     switch (e.detail.type) {\n  //       case \"VKWebAppViewHide\":\n  //         clearInterval(timerId);\n  //         break;\n  //     }\n  //   });\n  // }, []);\n\n  // Рекламный видеоролик\n  function nativeAds() {\n    if (![236908027, 457421325, 73606509].includes(USER_ID)) {\n      return bridge\n        .sendPromise(\"VKWebAppShowNativeAds\", {\n          ad_format: \"preloader\",\n        })\n        .then((res) => console.log(\"VKWebAppShowNativeAds RES\", res))\n        .catch((err) => console.log(\"VKWebAppShowNativeAds ERR\", err));\n    }\n  }\n\n   // Рекламный баннер\n   function adsBanner() {\n    bridge\n      .send(\"VKWebAppGetAds\")\n      .then((promoBannerProps) => {\n        console.log(\"promoBannerProps 1\", promoBannerProps);\n        console.log(\"promoBannerProps 2\", { promoBannerProps });\n        setPromoBannerProps({\n          title: promoBannerProps.title,\n          domain: promoBannerProps.domain,\n          trackingLink: promoBannerProps.trackingLink,\n          ctaText: promoBannerProps.ctaText,\n          advertisingLabel: promoBannerProps.advertisingLabel,\n          iconLink: promoBannerProps.iconLink,\n          description: promoBannerProps.description,\n          ageRestrictions: promoBannerProps.ageRestrictions,\n          statistics: promoBannerProps.statistics,\n        });\n      })\n      .catch((err) => console.log(\"promoBannerProps ERR\", err));\n  }\n\n  // Подписка на группу\n  function addGroup() {\n    bridge\n      .send(\"VKWebAppJoinGroup\", { group_id: GROUP_ID })\n      .then(({ result }) => {\n        console.log(\"VKWebAppJoinGroup\", result);\n      });\n  }\n\n\n\n  function onChangeHandlerAmount(e) {\n    const value = e.target.value.trim();\n    amount = +value;\n  }\n\n  function onChangeHandlerId(e) {\n    const value = e.target.value.trim();\n    targetId = value;\n    setInpuValue(value);\n    console.log(\"inputValue\", inputValue);\n  }\n\n  // function openPayment(type, choose) {\n  //   setActiveModal(null);\n  //   bridge\n  //     .sendPromise(\"VKWebAppAllowMessagesFromGroup\", {\n  //       group_id: GROUP_ID,\n  //     })\n  //     .then((res) => {\n  //       if (res) {\n  //         setPopout(\n  //           <>\n  //             <ActionSheet onClose={() => setPopout(null)}>\n  //               <ActionSheetItem\n  //                 autoclose\n  //                 onClick={() => qiwiPay(type, choose)}\n  //               >\n  //                 Оплатить через QIWI\n  //               </ActionSheetItem>\n  //               <ActionSheetItem\n  //                 autoclose\n  //                 onClick={() => payVkPay(type, choose)}\n  //               >\n  //                 Оплатить через VK Pay\n  //               </ActionSheetItem>\n  //             </ActionSheet>\n  //           </>\n  //         );\n  //       }\n  //     });\n  // }\n\n  function openAlert(text, backgroundColor = \"green\") {\n    if (snackbar) return;\n    setSnackbar(\n      <Snackbar\n        duration=\"7000\"\n        layout=\"horizontal\"\n        onClose={() => setSnackbar(null)}\n        before={\n          <Avatar size={24} style={{ backgroundColor }}>\n            {backgroundColor === \"green\" ? (\n              <Icon16Done fill=\"#fff\" width={14} height={14} />\n            ) : (\n              <Icon16Cancel fill=\"#fff\" width={14} height={14} />\n            )}\n          </Avatar>\n        }\n      >\n        {text}\n      </Snackbar>\n    );\n  }\n\n  function openModal(type) {\n    setActiveModal(\n      <ModalBuy\n        setActiveModal={setActiveModal}\n        APP_AVATAR={APP_AVATAR}\n        onChangeHandlerAmount={onChangeHandlerAmount}\n        getUser={getUser}\n        type={type}\n      />\n    );\n  }\n\n  function openPopoutSharing() {\n    setActiveModal(null);\n    setPopout(\n      <>\n        <ActionSheet onClose={() => setPopout(null)}>\n          <ActionSheetItem autoclose onClick={() => sharing(\"share-link\")}>\n            Поделиться ссылкой\n          </ActionSheetItem>\n          <ActionSheetItem\n            autoclose\n            onClick={() => sharing(\"copy-link\", openAlert)}\n          >\n            Скопировать ссылку\n          </ActionSheetItem>\n          <ActionSheetItem autoclose onClick={() => sharing(\"story\")}>\n            Поделиться в истории\n          </ActionSheetItem>\n          <ActionSheetItem\n            autoclose\n            onClick={(e) => sharing(\"share-wall\", null, e)}\n          >\n            Поделиться на стене\n          </ActionSheetItem>\n        </ActionSheet>\n      </>\n    );\n  }\n\n  function getUser() {\n    callMethod(\"getUser\").then(({ message }) => {\n      setUserInfo(message);\n      console.log(\"getUser\", message);\n    });\n  }\n\n  function getUserInfo() {\n    if (inputValue === \"\") {\n      return openAlert(\"Введите ссылку на пользователя\", \"red\");\n    } else if (userInfo.attempts === 0) {\n      return openAlert(\n        \"Недостаточно средств на балансе, пополните баланс\",\n        \"red\"\n      );\n    }\n    setInpuValue(\"\");\n    setTargetUserInfo(null);\n    setRenderTargetUserInfo(null);\n    setActiveTab(\"general\");\n\n    setLoadingSpinner(\n      <div className=\"flexCenterColumn\">\n        <Spinner size=\"large\" style={{ marginTop: 20 }} />\n        <div style={{marginTop: \"8px\"}}>Cкорость загрузки зависит от</div>\n        <div>количества друзей пользователя</div>\n      </div>\n    );\n\n    callMethod(\"getUserInfo\", {\n      targetUser: inputValue,\n    }).then(({ status, message }) => {\n      if (status === \"success\" && message.generalInfo) {\n        getUser();\n        setTargetUserInfo(message);\n        setRenderTargetUserInfo(\n          message.likesInfo.map((item, index) => {\n            const urlUser = \"https://vk.com/id\" + item.id;\n            return (\n              <ResultUserItem\n                id={index + 1}\n                key={index}\n                urlUser={urlUser}\n                fullName={item.fullName}\n                photoURL={item.photoURL}\n                likes={item.likes}\n                activeTab={\"likes\"}\n                type={\"likes\"}\n              />\n            );\n          })\n        );\n        setRenderUserGroups(\n          message.groupsInfo.map((item, index) => {\n            const urlUser = \"https://vk.com/club\" + item.id;\n            return (\n              <ResultUserItem\n                id={index + 1}\n                key={index}\n                urlUser={urlUser}\n                fullName={item.name}\n                photoURL={item.photoURL}\n                type={\"group\"}\n              />\n            );\n          })\n        );\n        setRenderHiddenFriends(\n          message.hiddenFriends.map((item, index) => {\n            const urlUser = \"https://vk.com/id\" + item.id;\n            return (\n              <ResultUserItem\n                id={index + 1}\n                key={index}\n                urlUser={urlUser}\n                fullName={item.fullName}\n                photoURL={item.photoURL}\n                type={\"hidden-friends\"}\n              />\n            );\n          })\n        );\n        \n        setRenderHiddingFriends(\n          message.hiddingFriends.map((item, index) => {\n            const urlUser = \"https://vk.com/id\" + item.id;\n            return (\n              <ResultUserItem\n                id={index + 1}\n                key={index}\n                urlUser={urlUser}\n                fullName={item.fullName}\n                photoURL={item.photoURL}\n                type={\"hidding-friends\"}\n              />\n            );\n          })\n        );\n        console.log(\"setTargetUserInfo\", message);\n      } else {\n        openAlert(message, \"red\");\n      }\n\n      setLoadingSpinner(null);\n    });\n  }\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    // <ConfigProvider isWebView={true} scheme={scheme}>\n    <View\n      activePanel={activePanel}\n      popout={popout}\n      header={false}\n      modal={activeModal}\n    >\n      <Home\n        id=\"home\"\n        fetchedUser={fetchedUser}\n        go={go}\n        openAlert={openAlert}\n        snackbar={snackbar}\n        openPopoutSharing={openPopoutSharing}\n        openModal={openModal}\n        USER_ID={USER_ID}\n        onChangeHandlerId={onChangeHandlerId}\n        getUserInfo={getUserInfo}\n        targetUserInfo={targetUserInfo}\n        loadingSpinner={loadingSpinner}\n        userInfo={userInfo}\n        renderTargetUserInfo={renderTargetUserInfo}\n        activeTab={activeTab}\n        setActiveTab={setActiveTab}\n        inputValue={inputValue}\n        renderUserGroups={renderUserGroups}\n        getUser={getUser}\n        promoBannerProps={promoBannerProps}\n        setPromoBannerProps={setPromoBannerProps}\n        renderHiddenFriends={renderHiddenFriends}\n        renderHiddingFriends={renderHiddingFriends}\n      />\n    </View>\n    // </ConfigProvider>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// if (process.env.NODE_ENV === \"development\") {\n//   import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n","/**\r\n * @typedef {Object} Answer\r\n * @property {'success' | 'denied'} status - Статус ответа\r\n * @property {any} message - Сообщение ответа\r\n */\r\n\r\n/**\r\n * Класс для работы с API\r\n */\r\nexport class APIManager {\r\n    static baseURL = 'https://one-digitalspace.ru/spy/rest-api';\r\n\r\n    /**\r\n     * @param {string} methodName - Имя метода\r\n     * @param {object} params - Параметры метода\r\n     * @returns {Promise<Answer>} \r\n     */\r\n    static async callMethod(methodName, params = {}) {\r\n        const response = await fetch(\r\n            `${APIManager.baseURL}/${methodName}`,\r\n            {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    ...params,\r\n                    search: document.location.search\r\n                }),\r\n                method: 'POST'\r\n            }\r\n        );\r\n    \r\n        return response.json();\r\n    }\r\n}","import bridge from \"@vkontakte/vk-bridge\";\r\nimport { APP_ID, APP_IMG_SHARING, APP_IMG_SHARING_WALL, USER_ID } from \"../config\";\r\n\r\nexport function sharing(type, openAlert, e) {\r\n  switch (type) {\r\n    case \"share-link\":\r\n      shareLink();\r\n      break;\r\n    case \"copy-link\":\r\n      copyLink(openAlert);\r\n      break;\r\n    case \"story\":\r\n      story();\r\n      break;\r\n    case \"share-wall\":\r\n      share(e);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nfunction shareLink() {\r\n  const link = `https://vk.com/app${APP_ID}#${USER_ID}`;\r\n  bridge.send(\"VKWebAppShare\", {\r\n    link: link,\r\n  });\r\n}\r\n\r\n// Копирование в буфер\r\nfunction copyLink(openAlert) {\r\n  const link = `https://vk.com/app${APP_ID}#${USER_ID}`;\r\n  bridge\r\n    .sendPromise(\"VKWebAppGetClientVersion\")\r\n    .then((result) => {\r\n      console.log(result.platform);\r\n      if (result.platform === \"web\" || result.platform === \"mobile-web\") {\r\n        window.navigator.clipboard.writeText(link).then(\r\n          () => {\r\n            console.log(\"successfully set\", link);\r\n            openAlert(\"Ссылка скопирована\");\r\n          },\r\n          () => {\r\n            console.log(\"write failed\", link);\r\n          }\r\n        );\r\n      } else {\r\n        bridge.send(\"VKWebAppCopyText\", { text: link });\r\n        openAlert(\"Ссылка скопирована\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"error\", error);\r\n    });\r\n}\r\n\r\n//  Поделиться в истории\r\nfunction story() {\r\n  const url = `https://vk.com/app${APP_ID}#${USER_ID}`;\r\n\r\n  bridge.sendPromise(\"VKWebAppShowStoryBox\", {\r\n    background_type: \"image\",\r\n    url: APP_IMG_SHARING,\r\n    attachment: {\r\n      text: \"go_to\",\r\n      type: \"url\",\r\n      url: url,\r\n    },\r\n  });\r\n}\r\n\r\n//  ДОБАВЛЕНИЕ РЕПОСТА НА СТЕНУ ПОЛЬЗОВАТЕЛЯ\r\nfunction share(e) {\r\n  e.preventDefault();\r\n  const url = `https://vk.com/app${APP_ID}#${USER_ID}`;\r\n  const urlPhotoStories = `${APP_IMG_SHARING_WALL},https://vk.com/app${APP_ID}#${USER_ID}`;\r\n  const textStories = `Заходи в приложение и узнай, кого лайкает или кому пишет твоя вторая половинка, Приложение - ${url}`;\r\n\r\n  bridge.send(\"VKWebAppShowWallPostBox\", {\r\n    message: textStories,\r\n    attachments: urlPhotoStories,\r\n  });\r\n}\r\n","export * from './ModalBuy';\r\nexport * from './ModalBuyVIP';\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ModalRoot,\r\n  ModalCard,\r\n  FormLayout,\r\n  Input,\r\n  Avatar,\r\n  Div,\r\n  Radio,\r\n  Button,\r\n} from \"@vkontakte/vkui\";\r\n\r\nimport { APIManager, sharing } from \"../helpers\";\r\nconst { callMethod } = APIManager;\r\n\r\nconst ModalBuy = ({\r\n  setActiveModal,\r\n  onChangeHandlerAmount,\r\n  APP_AVATAR,\r\n  getDonateLink,\r\n  getUser,\r\n  type\r\n}) => {\r\n  const [sum, setSum] = useState(29);\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    callMethod(\"getDonateLink\", {\r\n      amount: type === \"guard\" ? 29 : sum,\r\n    }).then(({ status, message }) => {\r\n      console.log(message);\r\n      if (status === \"success\") {\r\n        setLink(message);\r\n        getUser();\r\n      } else {\r\n        // openAlert(message, \"red\");\r\n        console.log(message);\r\n      }\r\n    });\r\n  }, [sum]);\r\n\r\n  return (\r\n    <>\r\n      {type === \"buy\" ? (\r\n        <ModalRoot activeModal=\"buy\">\r\n          <ModalCard\r\n            id=\"buy\"\r\n            onClose={() => setActiveModal(null)}\r\n            icon={<Avatar size={72} src={APP_AVATAR} />}\r\n            header=\"Выберите сумму пополнения\"\r\n            caption={\r\n              <>\r\n                <Div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"start\",\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"column\",\r\n                    width: \"100%\",\r\n                  }}\r\n                >\r\n                  <Radio defaultChecked name=\"radio\" onClick={() => setSum(29)}>\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      29 ₽ ( 1 слежка )\r\n                    </span>\r\n                  </Radio>\r\n                  <Radio name=\"radio\" onClick={() => setSum(59)}>\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      59 ₽ ( 3 слежки )\r\n                    </span>\r\n                  </Radio>\r\n                  <Radio name=\"radio\" onClick={() => setSum(89)}>\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      89 ₽ ( 5 слежек )\r\n                    </span>\r\n                  </Radio>\r\n                </Div>\r\n                <Div>\r\n                  <Button\r\n                    style={{\r\n                      backgroundColor: \"#184a6e\",\r\n                      color: \"white\",\r\n                      borderRadius: \"13px\",\r\n                    }}\r\n                    size=\"xl\"\r\n                    level=\"2\"\r\n                    href={link}\r\n                    target=\"_blank\"\r\n                    onClick={() => setActiveModal(null)}\r\n                  >\r\n                    Пополнить\r\n                  </Button>\r\n                </Div>\r\n              </>\r\n            }\r\n          ></ModalCard>\r\n        </ModalRoot>\r\n      ) : (\r\n        <ModalRoot activeModal=\"guard\">\r\n          <ModalCard\r\n            id=\"guard\"\r\n            onClose={() => setActiveModal(null)}\r\n            icon={<Avatar size={72} src={APP_AVATAR} />}\r\n            header=\"Покупка защиты от слежки\"\r\n            caption={\r\n              <>\r\n                <Div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"start\",\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"column\",\r\n                    width: \"100%\",\r\n                    padding: \"20px 0px 20px 0px\"\r\n                  }}\r\n                >\r\n                  После покупки \"Защиты от слежки\" другие пользователи не смогут\r\n                  унзать о Вас информацию.\r\n                </Div>\r\n                <Div>\r\n                  <Button\r\n                    style={{\r\n                      backgroundColor: \"#184a6e\",\r\n                      color: \"white\",\r\n                      borderRadius: \"13px\",\r\n                    }}\r\n                    size=\"xl\"\r\n                    level=\"2\"\r\n                    href={link}\r\n                    target=\"_blank\"\r\n                    onClick={() => setActiveModal(null)}\r\n                  >\r\n                    Купить\r\n                  </Button>\r\n                </Div>\r\n              </>\r\n            }\r\n          ></ModalCard>\r\n        </ModalRoot>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { ModalBuy };\r\n"],"sourceRoot":""}